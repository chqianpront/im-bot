<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.chen.imbot.usercenter.dao.UserDao">
	<resultMap id="UserResultMap" type="com.chen.imbot.usercenter.model.User">
		<id property="id" column="id"></id>
		<result property="accountName" column="account_name"></result>
		<result property="name" column="name"/>
		<result property="created_at" column="createdAt" />
		<result property="upated_at" column="upatedAt" />
	</resultMap>
	<sql id="userColumn">
		id, name, account_name, created_at, updated_at
	</sql>
	<select id="userCount" parameterType="com.chen.imbot.usercenter.model.User" resultType="Integer">
		select count(id) from user
		<where>
			<if test="accountName != null">
				account_name = #{accountName}
			</if>
			<if test="encryptedPassword != null">
				encrypted_password = #{encryptedPassword}
			</if>
		</where>
	</select>
	<select id="findUserById" parameterType="com.chen.imbot.usercenter.model.User" resultMap="UserResultMap">
		select <include refid="userColumn"></include> from user where id = #{id}
	</select>
	<select id="findUserByAccName" parameterType="com.chen.imbot.usercenter.model.User" resultMap="UserResultMap">
		select <include refid="userColumn"></include> from user where account_name = #{accountName}
	</select>
	<select id="findUserByPass" parameterType="com.chen.imbot.usercenter.model.User" resultMap="UserResultMap">
		select <include refid="userColumn"></include> from user where encrypted_password = #{encryptedPassword} and account_name = #{accountName} 
	</select>
	<insert id="register" parameterType="com.chen.imbot.usercenter.model.User">
		insert into user (account_name, encrypted_password) values (#{accountName}, #{encryptedPassword})
	</insert>
	<insert id="addToken" parameterType="com.chen.imbot.usercenter.model.Token">
		insert into token (token, refresh_token, user_id, created_at, updated_at) values (#{token}, #{refreshToken}, #{userId}, #{createdAt}, #{updatedAt});
	</insert>
	<update id="updateToken" parameterType="com.chen.imbot.usercenter.model.Token">
		update token set token = #{token}, refresh_token = #{refreshToken}, updated_at = #{updatedAt} where user_id = #{userId};
	</update>
	<select id="userTokenCount" parameterType="com.chen.imbot.usercenter.model.Token" resultType="Integer">
		select count(id) from token
		<where>
			<if test="userId != null">
				user_id = #{userId}
			</if>
		</where>
	</select>
	<select id="userToken" parameterType="Integer" resultType="String">
		select token from user where user_id = #{id}
	</select>
	<select id="userChannels" parameterType="Integer" resultType="String">
		select user_channel from user where id in #{ids}
	</select>
	<select id="teamUserIds" parameterType="Integer" resultType="Integer">
		select user_id from team_user where team_id = #{teamId}
	</select>
	<select id="flowUserIds" parameterType="Integer" resultType="Integer">
		select user_id from flow_user where flow_id = #{flowId}
	</select>
</mapper>